{"version":3,"sources":["../../src/serializer/serializer.js"],"names":["t","Serializer","realm","serializerOptions","useAbstractInterpretation","generator","logger","internalDebug","statistics","modules","logModules","delayUnsupportedRequires","accelerateUnsupportedRequires","functions","additionalFunctions","moduleTracer","trace","tracers","push","options","react","usedReactElementKeys","Set","sources","sourceMaps","$GlobalEnv","executeSources","realmPreludeGenerator","preludeGenerator","forbiddenNames","nameGenerator","ast","isIdentifier","node","add","name","res","code","context","pushContext","logCompletion","popContext","diagnostic","location","handleError","timingStats","profile","undefined","totalTime","Date","now","globalCodeTime","_execute","hasErrors","resolveInitializedModules","checkThatFunctionsAreIndependent","reactStatistics","enabled","checkReactRootComponents","initializeMoreModules","initializeMoreModulesTime","additionalFunctionValuesAndEffects","getAdditionalFunctionValuesToEffects","functionValue","effectsAndTransforms","effects","parent","deepTraversalTime","residualHeapVisitor","visitRoots","residualHeapValueIdentifiers","values","keys","heapGraph","heapGraphFormat","heapRefCounter","heapGraphGenerator","getResult","generateResult","inlineExpressions","referenceCountsTime","initPass1","inspector","functionInstances","classMethodInstances","functionInfos","referencedDeclaredValues","additionalFunctionValueInfos","declarativeEnvironmentRecordsBindings","serialize","initPass2","serializePassTime","TargetSerializer","lazyObjectsRuntime","residualHeapSerializer","generated","logStatistics","log","map"],"mappings":"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","file":"serializer.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm, ExecutionContext } from \"../realm.js\";\nimport { CompilerDiagnostic, FatalError } from \"../errors.js\";\nimport type { SourceFile } from \"../types.js\";\nimport { AbruptCompletion } from \"../completions.js\";\nimport { Generator } from \"../utils/generator.js\";\nimport generate from \"babel-generator\";\nimport traverseFast from \"../utils/traverse-fast.js\";\nimport invariant from \"../invariant.js\";\nimport type { SerializerOptions } from \"../options.js\";\nimport { TimingStatistics, SerializerStatistics, ReactStatistics } from \"./types.js\";\nimport type { ReactSerializerState, SerializedResult } from \"./types.js\";\nimport { Functions } from \"./functions.js\";\nimport { Logger } from \"../utils/logger.js\";\nimport { Modules } from \"../utils/modules.js\";\nimport { LoggingTracer } from \"./LoggingTracer.js\";\nimport { ResidualHeapVisitor } from \"./ResidualHeapVisitor.js\";\nimport { ResidualHeapSerializer } from \"./ResidualHeapSerializer.js\";\nimport { ResidualHeapValueIdentifiers } from \"./ResidualHeapValueIdentifiers.js\";\nimport { LazyObjectsSerializer } from \"./LazyObjectsSerializer.js\";\nimport * as t from \"babel-types\";\nimport { ResidualHeapRefCounter } from \"./ResidualHeapRefCounter\";\nimport { ResidualHeapGraphGenerator } from \"./ResidualHeapGraphGenerator\";\n\nexport class Serializer {\n  constructor(realm: Realm, serializerOptions: SerializerOptions = {}) {\n    invariant(realm.useAbstractInterpretation);\n    // Start tracking mutations\n    realm.generator = new Generator(realm, \"main\");\n\n    this.realm = realm;\n    this.logger = new Logger(this.realm, !!serializerOptions.internalDebug);\n    this.statistics = new SerializerStatistics();\n    this.modules = new Modules(\n      this.realm,\n      this.logger,\n      this.statistics,\n      !!serializerOptions.logModules,\n      !!serializerOptions.delayUnsupportedRequires,\n      !!serializerOptions.accelerateUnsupportedRequires\n    );\n    this.functions = new Functions(this.realm, serializerOptions.additionalFunctions, this.modules.moduleTracer);\n    if (serializerOptions.trace) this.realm.tracers.push(new LoggingTracer(this.realm));\n\n    this.options = serializerOptions;\n    this.react = {\n      usedReactElementKeys: new Set(),\n    };\n  }\n\n  realm: Realm;\n  functions: Functions;\n  logger: Logger;\n  modules: Modules;\n  options: SerializerOptions;\n  statistics: SerializerStatistics;\n  react: ReactSerializerState;\n\n  _execute(sources: Array<SourceFile>, sourceMaps?: boolean = false): { [string]: string } {\n    let realm = this.realm;\n    let [res, code] = realm.$GlobalEnv.executeSources(sources, \"script\", ast => {\n      let realmPreludeGenerator = realm.preludeGenerator;\n      invariant(realmPreludeGenerator);\n      let forbiddenNames = realmPreludeGenerator.nameGenerator.forbiddenNames;\n      traverseFast(ast, node => {\n        if (!t.isIdentifier(node)) return false;\n\n        forbiddenNames.add(((node: any): BabelNodeIdentifier).name);\n        return true;\n      });\n    });\n\n    if (res instanceof AbruptCompletion) {\n      let context = new ExecutionContext();\n      realm.pushContext(context);\n      try {\n        this.logger.logCompletion(res);\n      } finally {\n        realm.popContext(context);\n      }\n      let diagnostic = new CompilerDiagnostic(\"Global code may end abruptly\", res.location, \"PP0016\", \"FatalError\");\n      realm.handleError(diagnostic);\n      throw new FatalError();\n    }\n    return code;\n  }\n\n  init(sources: Array<SourceFile>, sourceMaps?: boolean = false): void | SerializedResult {\n    // Phase 1: Let's interpret.\n    let timingStats = this.options.profile ? new TimingStatistics() : undefined;\n    if (timingStats !== undefined) {\n      timingStats.totalTime = Date.now();\n      timingStats.globalCodeTime = Date.now();\n    }\n    let code = this._execute(sources);\n    if (timingStats !== undefined) timingStats.globalCodeTime = Date.now() - timingStats.globalCodeTime;\n    if (this.logger.hasErrors()) return undefined;\n    this.modules.resolveInitializedModules();\n    this.functions.checkThatFunctionsAreIndependent();\n    let reactStatistics = null;\n    if (this.realm.react.enabled) {\n      reactStatistics = new ReactStatistics();\n      this.functions.checkReactRootComponents(reactStatistics, this.react);\n    }\n\n    if (this.options.initializeMoreModules) {\n      if (timingStats !== undefined) timingStats.initializeMoreModulesTime = Date.now();\n      this.modules.initializeMoreModules();\n      if (this.logger.hasErrors()) return undefined;\n      if (timingStats !== undefined)\n        timingStats.initializeMoreModulesTime = Date.now() - timingStats.initializeMoreModulesTime;\n    }\n\n    let additionalFunctionValuesAndEffects = this.functions.getAdditionalFunctionValuesToEffects();\n    for (let [functionValue, effectsAndTransforms] of additionalFunctionValuesAndEffects) {\n      // Need to do this fixup because otherwise we will skip over this function's\n      // generator in the _getTarget scope lookup\n      let generator = effectsAndTransforms.effects[1];\n      generator.parent = functionValue.parent;\n      functionValue.parent = generator;\n    }\n\n    // Deep traversal of the heap to identify the necessary scope of residual functions\n    if (timingStats !== undefined) timingStats.deepTraversalTime = Date.now();\n    let residualHeapVisitor = new ResidualHeapVisitor(\n      this.realm,\n      this.logger,\n      this.modules,\n      additionalFunctionValuesAndEffects\n    );\n    residualHeapVisitor.visitRoots(true);\n    if (this.logger.hasErrors()) return undefined;\n    if (timingStats !== undefined) timingStats.deepTraversalTime = Date.now() - timingStats.deepTraversalTime;\n\n    const realmPreludeGenerator = this.realm.preludeGenerator;\n    invariant(realmPreludeGenerator);\n    const residualHeapValueIdentifiers = new ResidualHeapValueIdentifiers(\n      residualHeapVisitor.values.keys(),\n      realmPreludeGenerator\n    );\n\n    let heapGraph;\n    if (this.options.heapGraphFormat) {\n      const heapRefCounter = new ResidualHeapRefCounter(\n        this.realm,\n        this.logger,\n        this.modules,\n        additionalFunctionValuesAndEffects\n      );\n      heapRefCounter.visitRoots();\n\n      const heapGraphGenerator = new ResidualHeapGraphGenerator(\n        this.realm,\n        this.logger,\n        this.modules,\n        additionalFunctionValuesAndEffects,\n        residualHeapValueIdentifiers,\n        heapRefCounter.getResult()\n      );\n      heapGraphGenerator.visitRoots();\n      invariant(this.options.heapGraphFormat);\n      heapGraph = heapGraphGenerator.generateResult(this.options.heapGraphFormat);\n    }\n\n    // Phase 2: Let's serialize the heap and generate code.\n    // Serialize for the first time in order to gather reference counts\n\n    if (this.options.inlineExpressions) {\n      if (timingStats !== undefined) timingStats.referenceCountsTime = Date.now();\n      residualHeapValueIdentifiers.initPass1();\n      new ResidualHeapSerializer(\n        this.realm,\n        this.logger,\n        this.modules,\n        residualHeapValueIdentifiers,\n        residualHeapVisitor.inspector,\n        residualHeapVisitor.values,\n        residualHeapVisitor.functionInstances,\n        residualHeapVisitor.classMethodInstances,\n        residualHeapVisitor.functionInfos,\n        this.options,\n        residualHeapVisitor.referencedDeclaredValues,\n        additionalFunctionValuesAndEffects,\n        residualHeapVisitor.additionalFunctionValueInfos,\n        residualHeapVisitor.declarativeEnvironmentRecordsBindings,\n        this.statistics,\n        this.react\n      ).serialize();\n      if (this.logger.hasErrors()) return undefined;\n      if (timingStats !== undefined) timingStats.referenceCountsTime = Date.now() - timingStats.referenceCountsTime;\n      residualHeapValueIdentifiers.initPass2();\n    }\n\n    // Serialize for a second time, using reference counts to minimize number of generated identifiers\n    if (timingStats !== undefined) timingStats.serializePassTime = Date.now();\n    const TargetSerializer = this.options.lazyObjectsRuntime != null ? LazyObjectsSerializer : ResidualHeapSerializer;\n    let residualHeapSerializer = new TargetSerializer(\n      this.realm,\n      this.logger,\n      this.modules,\n      residualHeapValueIdentifiers,\n      residualHeapVisitor.inspector,\n      residualHeapVisitor.values,\n      residualHeapVisitor.functionInstances,\n      residualHeapVisitor.classMethodInstances,\n      residualHeapVisitor.functionInfos,\n      this.options,\n      residualHeapVisitor.referencedDeclaredValues,\n      additionalFunctionValuesAndEffects,\n      residualHeapVisitor.additionalFunctionValueInfos,\n      residualHeapVisitor.declarativeEnvironmentRecordsBindings,\n      this.statistics,\n      this.react\n    );\n\n    let ast = residualHeapSerializer.serialize();\n\n    // the signature for generate is not complete, hence the any\n    let generated = generate(ast, { sourceMaps: sourceMaps }, (code: any));\n    if (timingStats !== undefined) {\n      timingStats.serializePassTime = Date.now() - timingStats.serializePassTime;\n      timingStats.totalTime = Date.now() - timingStats.totalTime;\n    }\n    invariant(!this.logger.hasErrors());\n    if (this.options.logStatistics) residualHeapSerializer.statistics.log();\n    return {\n      code: generated.code,\n      map: generated.map,\n      reactStatistics,\n      statistics: residualHeapSerializer.statistics,\n      timingStats: timingStats,\n      heapGraph,\n    };\n  }\n}\n"]}