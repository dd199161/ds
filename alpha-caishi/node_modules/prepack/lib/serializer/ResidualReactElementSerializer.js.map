{"version":3,"sources":["../../src/serializer/ResidualReactElementSerializer.js"],"names":["t","ResidualReactElementSerializer","realm","residualHeapSerializer","logger","reactOutput","react","output","_lazilyHoistedNodes","undefined","val","typeValue","keyValue","refValue","propsValue","attributes","children","keyExpr","serializeValue","type","_addSerializedValueToJSXAttriutes","_addSerializedValueToObjectProperty","refExpr","serializedValues","add","properties","key","propertyBinding","desc","descriptor","value","childrenValue","childrenLength","childrenLengthValue","i","child","push","_serializeReactElementChild","logError","reactLibraryObject","fbLibraries","shouldHoist","currentFunctionBody","mainBody","id","getSerializeObjectIdentifier","originalCreateElementIdentifier","hoistedCreateElementIdentifier","reactElement","_serializeReactElementToJSXElement","createElement","identifier","intrinsicNameGenerator","generate","createElementIdentifier","_serializeReactElementToCreateElement","funcId","functionNameGenerator","nodes","statement","expressionStatement","logicalExpression","binaryExpression","unaryExpression","numericLiteral","callExpression","emitter","emit","Array","isArray","astNode","declar","variableDeclaration","variableDeclarator","prop","expr","includes","stringLiteral","objectProperty","typeIdentifier","createElementArguments","length","objectExpression","nullLiteral","createElementCall","_addBailOutMessageToBabelNode","openingElement","jSXOpeningElement","closingElement","jSXClosingElement","jsxElement","jSXElement","node","$BailOutReason","leadingComments","isStringLiteral","isNumericLiteral","jSXText","isJSXElement","jSXExpressionContainer","entries","func","functionExpression","blockStatement","map","assignmentExpression"],"mappings":";;;;;;;;;qjBAAA;;;;;;;;;AAWA;;AACA;;AACA;;AACA;;AACA;;IAAYA,C;;AAEZ;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;;;IAIaC,8B,WAAAA,8B;AACX,0CAAYC,KAAZ,EAA0BC,sBAA1B,EAA0E;AAAA;;AACxE,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,sBAAL,GAA8BA,sBAA9B;AACA,SAAKC,MAAL,GAAcD,uBAAuBC,MAArC;AACA,SAAKC,WAAL,GAAmBH,MAAMI,KAAN,CAAYC,MAAZ,IAAsB,gBAAzC;AACA,SAAKC,mBAAL,GAA2BC,SAA3B;AACD;;;;0CAQqBC,G,EAAuC;AAC3D,UAAIC,YAAY,gBAAI,KAAKT,KAAT,EAAgBQ,GAAhB,EAAqB,MAArB,CAAhB;AACA,UAAIE,WAAW,gBAAI,KAAKV,KAAT,EAAgBQ,GAAhB,EAAqB,KAArB,CAAf;AACA,UAAIG,WAAW,gBAAI,KAAKX,KAAT,EAAgBQ,GAAhB,EAAqB,KAArB,CAAf;AACA,UAAII,aAAa,gBAAI,KAAKZ,KAAT,EAAgBQ,GAAhB,EAAqB,OAArB,CAAjB;;AAEA,+BAAUC,cAAc,IAAxB,EAA8B,2BAA9B;;AAEA,UAAII,aAAa,EAAjB;AACA,UAAIC,WAAW,EAAf;;AAEA,UAAIJ,aAAa,IAAjB,EAAuB;AACrB,YAAIK,UAAU,KAAKd,sBAAL,CAA4Be,cAA5B,CAA2CN,QAA3C,CAAd;AACA,YAAIK,QAAQE,IAAR,KAAiB,aAArB,EAAoC;AAClC,cAAI,KAAKd,WAAL,KAAqB,KAAzB,EAAgC;AAC9B,iBAAKe,iCAAL,CAAuC,KAAvC,EAA8CH,OAA9C,EAAuDF,UAAvD;AACD,WAFD,MAEO,IAAI,KAAKV,WAAL,KAAqB,gBAAzB,EAA2C;AAChD,iBAAKgB,mCAAL,CAAyC,KAAzC,EAAgDJ,OAAhD,EAAyDF,UAAzD;AACD;AACF;AACF;;AAED,UAAIF,aAAa,IAAjB,EAAuB;AACrB,YAAIS,UAAU,KAAKnB,sBAAL,CAA4Be,cAA5B,CAA2CL,QAA3C,CAAd;AACA,YAAIS,QAAQH,IAAR,KAAiB,aAArB,EAAoC;AAClC,cAAI,KAAKd,WAAL,KAAqB,KAAzB,EAAgC;AAC9B,iBAAKe,iCAAL,CAAuC,KAAvC,EAA8CE,OAA9C,EAAuDP,UAAvD;AACD,WAFD,MAEO,IAAI,KAAKV,WAAL,KAAqB,gBAAzB,EAA2C;AAChD,iBAAKgB,mCAAL,CAAyC,KAAzC,EAAgDC,OAAhD,EAAyDP,UAAzD;AACD;AACF;AACF;;AAED,UAAID,yCAAJ,EAAuC;AACrC;AACA,aAAKX,sBAAL,CAA4BoB,gBAA5B,CAA6CC,GAA7C,CAAiDV,UAAjD;AACA;AAHqC;AAAA;AAAA;;AAAA;AAIrC,+BAAoCA,UAAD,CAA0BW,UAA7D,8HAAyE;AAAA;;AAAA;;AAAA,gBAA/DC,GAA+D;AAAA,gBAA1DC,eAA0D;;AACvE,gBAAIC,OAAOD,gBAAgBE,UAA3B;AACA,gBAAID,SAASnB,SAAb,EAAwB,SAF+C,CAErC;AAClC,qCAAU,CAAC,iCAAqB,KAAKP,KAA1B,EAAiC0B,IAAjC,CAAX,EAAmD,mDAAnD;;AAEA,qCAAUF,QAAQ,KAAR,IAAiBA,QAAQ,KAAnC,SAA8CA,GAA9C;;AAEA,gBAAIA,QAAQ,UAAR,IAAsBE,KAAKE,KAAL,KAAerB,SAAzC,EAAoD;AAClD,kBAAIsB,gBAAgBH,KAAKE,KAAzB;AACA,kBAAIC,2CAAJ,EAAyC;AACvC,qBAAK5B,sBAAL,CAA4BoB,gBAA5B,CAA6CC,GAA7C,CAAiDO,aAAjD;AACA,oBAAIC,iBAAiB,gBAAI,KAAK9B,KAAT,EAAgB6B,aAAhB,EAA+B,QAA/B,CAArB;AACA,oBAAIE,sBAAsB,CAA1B;AACA,oBAAID,6CAAJ,EAA2C;AACzCC,wCAAsBD,eAAeF,KAArC;AACA,uBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAID,mBAApB,EAAyCC,GAAzC,EAA8C;AAC5C,wBAAIC,QAAQ,gBAAI,KAAKjC,KAAT,EAAgB6B,aAAhB,EAA+B,KAAKG,CAApC,CAAZ;AACA,wBAAIC,8BAAJ,EAA4B;AAC1BnB,+BAASoB,IAAT,CAAc,KAAKC,2BAAL,CAAiCF,KAAjC,CAAd;AACD,qBAFD,MAEO;AACL,2BAAK/B,MAAL,CAAYkC,QAAZ,CACE5B,GADF,qCAEkCwB,CAFlC;AAID;AACF;AACD;AACD;AACF;AACD;AACAlB,uBAASoB,IAAT,CAAc,KAAKC,2BAAL,CAAmCN,aAAnC,CAAd;AACA;AACD;AACD,gBAAIH,KAAKE,KAAL,yBAAJ,EAAiC;AAC/B,kBAAI,KAAKzB,WAAL,KAAqB,KAAzB,EAAgC;AAC9B,qBAAKe,iCAAL,CACEM,GADF,EAEE,KAAKvB,sBAAL,CAA4Be,cAA5B,CAA2CU,KAAKE,KAAhD,CAFF,EAGEf,UAHF;AAKD,eAND,MAMO,IAAI,KAAKV,WAAL,KAAqB,gBAAzB,EAA2C;AAChD,qBAAKgB,mCAAL,CACEK,GADF,EAEE,KAAKvB,sBAAL,CAA4Be,cAA5B,CAA2CU,KAAKE,KAAhD,CAFF,EAGEf,UAHF;AAKD;AACF;AACF;AApDoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDtC;AACD,UAAIwB,qBAAqB,KAAKrC,KAAL,CAAWsC,WAAX,CAAuBlC,KAAhD;AACA,UAAImC,cACF,KAAKtC,sBAAL,CAA4BuC,mBAA5B,KAAoD,KAAKvC,sBAAL,CAA4BwC,QAAhF,IACA,oCAAqB,KAAKzC,KAA1B,EAAiCQ,GAAjC,CAFF;;AAIA,UAAIkC,KAAK,KAAKzC,sBAAL,CAA4B0C,4BAA5B,CAAyDnC,GAAzD,CAAT;AACA;AACA,UAAIoC,kCAAkC,IAAtC;AACA;AACA,UAAIC,iCAAiC,IAArC;AACA,UAAIC,qBAAJ;;AAEA,UAAI,KAAK3C,WAAL,KAAqB,KAAzB,EAAgC;AAC9B2C,uBAAe,KAAKC,kCAAL,CAAwCvC,GAAxC,EAA6CC,SAA7C,EAAwDI,UAAxD,EAAoEC,QAApE,EAA8EuB,kBAA9E,CAAf;AACD,OAFD,MAEO,IAAI,KAAKlC,WAAL,KAAqB,gBAAzB,EAA2C;AAChD;AACA,YAAIkC,uBAAuB9B,SAA3B,EAAsC;AACpC,gBAAM,uBAAe,qFAAf,CAAN;AACD;AACD,YAAIyC,gBAAgB,gBAAI,KAAKhD,KAAT,EAAgBqC,kBAAhB,EAAoC,eAApC,CAApB;AACAO,0CAAkC,KAAK3C,sBAAL,CAA4Be,cAA5B,CAA2CgC,aAA3C,CAAlC;AACA,YAAIT,WAAJ,EAAiB;AACf;AACA;AACA,cAAI,KAAKjC,mBAAL,KAA6BC,SAAjC,EAA4C;AAC1C;AACAsC,6CAAiC/C,EAAEmD,UAAF,CAAa,KAAKhD,sBAAL,CAA4BiD,sBAA5B,CAAmDC,QAAnD,EAAb,CAAjC;AACD,WAHD,MAGO;AACLN,6CAAiC,KAAKvC,mBAAL,CAAyB8C,uBAA1D;AACD;AACF;;AAEDN,uBAAe,KAAKO,qCAAL,CACb7C,GADa,EAEbC,SAFa,EAGbI,UAHa,EAIbC,QAJa,EAKbyB,cAAcM,8BAAd,GAA+CD,+BALlC,CAAf;AAOD,OAzBM,MAyBA;AACL,iCAAU,KAAV,EAAiB,+BAAjB;AACD;AACD;AACA;AACA,UAAIL,WAAJ,EAAiB;AACf;AACA;AACA,YAAI,KAAKjC,mBAAL,KAA6BC,SAAjC,EAA4C;AAC1C,cAAI+C,SAASxD,EAAEmD,UAAF,CAAa,KAAKhD,sBAAL,CAA4BsD,qBAA5B,CAAkDJ,QAAlD,EAAb,CAAb;AACA,eAAK7C,mBAAL,GAA2B;AACzBoC,gBAAIY,MADqB;AAEzBF,qCAAyBP,8BAFA;AAGzBW,mBAAO;AAHkB,WAA3B;AAKA,cAAIC,YAAY3D,EAAE4D,mBAAF,CACd5D,EAAE6D,iBAAF,CACE,IADF,EAEE7D,EAAE8D,gBAAF,CAAmB,KAAnB,EAA0BlB,EAA1B,EAA8B5C,EAAE+D,eAAF,CAAkB,MAAlB,EAA0B/D,EAAEgE,cAAF,CAAiB,CAAjB,CAA1B,EAA+C,IAA/C,CAA9B,CAFF;AAGE;AACAhE,YAAEiE,cAAF,CAAiBT,MAAjB,EAAyBV,kCAAkC,CAACA,+BAAD,CAAlC,GAAsE,EAA/F,CAJF,CADc,CAAhB;AAQA,eAAK3C,sBAAL,CAA4B+D,OAA5B,CAAoCC,IAApC,CAAyCR,SAAzC;AACD;AACD;AACA;AACA,iCAAU,KAAKnD,mBAAL,KAA6BC,SAAvC;AACA,iCAAU2D,MAAMC,OAAN,CAAc,KAAK7D,mBAAL,CAAyBkD,KAAvC,CAAV;AACA,aAAKlD,mBAAL,CAAyBkD,KAAzB,CAA+BtB,IAA/B,CAAoC,EAAEQ,MAAF,EAAM0B,SAAStB,YAAf,EAApC;AACD,OAzBD,MAyBO;AACL,YAAIuB,SAASvE,EAAEwE,mBAAF,CAAsB,KAAtB,EAA6B,CAACxE,EAAEyE,kBAAF,CAAqB7B,EAArB,EAAyBI,YAAzB,CAAD,CAA7B,CAAb;AACA,aAAK7C,sBAAL,CAA4B+D,OAA5B,CAAoCC,IAApC,CAAyCI,MAAzC;AACD;AACD,aAAOvB,YAAP;AACD;;;sDAEiC0B,I,EAAcC,I,EAAW5D,U,EAAoC;AAC7FA,iBAAWqB,IAAX,CAAgB,wCAA8BsC,IAA9B,EAAoCC,IAApC,CAAhB;AACD;;;wDAEmCD,I,EAAcC,I,EAAW5D,U,EAAoC;AAC/F,UAAIW,YAAJ;;AAEA,UAAIgD,KAAKE,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACtBlD,cAAM1B,EAAE6E,aAAF,CAAgBH,IAAhB,CAAN;AACD,OAFD,MAEO;AACLhD,cAAM1B,EAAEmD,UAAF,CAAauB,IAAb,CAAN;AACD;AACD3D,iBAAWqB,IAAX,CAAgBpC,EAAE8E,cAAF,CAAiBpD,GAAjB,EAAsBiD,IAAtB,CAAhB;AACD;;;0DAGCjE,G,EACAC,S,EACAI,U,EACAC,Q,EACAsC,uB,EACqB;AACrB,UAAIyB,iBAAiB,KAAK5E,sBAAL,CAA4Be,cAA5B,CAA2CP,SAA3C,CAArB;AACA,UAAIqE,yBAAyB,CAACD,cAAD,CAA7B;AACA;AACA,UAAIhE,WAAWkE,MAAX,KAAsB,CAA1B,EAA6B;AAC3B;AACAD,+BAAuB5C,IAAvB,CAA4BpC,EAAEkF,gBAAF,CAAoBnE,UAApB,CAA5B;AACD;AACD,UAAIC,SAASiE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,YAAIlE,WAAWkE,MAAX,KAAsB,CAA1B,EAA6B;AAC3BD,iCAAuB5C,IAAvB,CAA4BpC,EAAEmF,WAAF,EAA5B;AACD;AACDH,+BAAuB5C,IAAvB,kDAA+BpB,QAA/B;AACD;AACD;AACA,UAAIoE,oBAAoBpF,EAAEiE,cAAF,CAAiBX,uBAAjB,EAA2C0B,sBAA3C,CAAxB;AACA,WAAKK,6BAAL,CAAmC3E,GAAnC,EAAwC0E,iBAAxC;AACA,aAAOA,iBAAP;AACD;;;uDAGC1E,G,EACAC,S,EACAI,U,EACAC,Q,EACAuB,kB,EACqB;AACrB,UAAIA,uBAAuB9B,SAA3B,EAAsC;AACpC,aAAKN,sBAAL,CAA4Be,cAA5B,CAA2CqB,kBAA3C;AACD;AACD,UAAIY,aAAa,2CAAiC,KAAKhD,sBAAL,CAA4Be,cAA5B,CAA2CP,SAA3C,CAAjC,EAAwF,IAAxF,CAAjB;AACA,UAAI2E,iBAAiBtF,EAAEuF,iBAAF,CAAoBpC,UAApB,EAAiCpC,UAAjC,EAAmDC,SAASiE,MAAT,KAAoB,CAAvE,CAArB;AACA,UAAIO,iBAAiBxF,EAAEyF,iBAAF,CAAoBtC,UAApB,CAArB;;AAEA,UAAIuC,aAAa1F,EAAE2F,UAAF,CAAaL,cAAb,EAA6BE,cAA7B,EAA6CxE,QAA7C,EAAuDA,SAASiE,MAAT,KAAoB,CAA3E,CAAjB;AACA,WAAKI,6BAAL,CAAmC3E,GAAnC,EAAwCgF,UAAxC;AACA,aAAOA,UAAP;AACD;;;kDAE6BhF,G,EAAkBkF,I,EAAuB;AACrE;AACA,UAAIlF,IAAImF,cAAJ,KAAuBpF,SAA3B,EAAsC;AACpC;AACAmF,aAAKE,eAAL,GAAuB,CAAE,EAAE3E,MAAM,cAAR,EAAwBW,YAAUpB,IAAImF,cAAtC,EAAF,CAAvB;AACD;AACF;;;gDAE2B1D,K,EAAyB;AACnD,UAAMwC,OAAO,KAAKxE,sBAAL,CAA4Be,cAA5B,CAA2CiB,KAA3C,CAAb;;AAEA,UAAI,KAAK9B,WAAL,KAAqB,KAAzB,EAAgC;AAC9B,YAAIL,EAAE+F,eAAF,CAAkBpB,IAAlB,KAA2B3E,EAAEgG,gBAAF,CAAmBrB,IAAnB,CAA/B,EAAyD;AACvD,iBAAO3E,EAAEiG,OAAF,CAAYtB,IAAD,CAAY7C,KAAb,GAA8B,EAAxC,CAAP;AACD,SAFD,MAEO,IAAI9B,EAAEkG,YAAF,CAAevB,IAAf,CAAJ,EAA0B;AAC/B,iBAAOA,IAAP;AACD;AACD,eAAO3E,EAAEmG,sBAAF,CAAyBxB,IAAzB,CAAP;AACD,OAPD,MAOO,IAAI,KAAKtE,WAAL,KAAqB,gBAAzB,EAA2C;AAChD,eAAOsE,IAAP;AACD;AACD,+BAAU,KAAV,EAAiB,+BAAjB;AACD;;;gDAE2B;AAC1B,UAAMyB,UAAU,EAAhB;AACA,UAAI,KAAK5F,mBAAL,KAA6BC,SAAjC,EAA4C;AAAA,kCACG,KAAKD,mBADR;AAAA,YACpCoC,EADoC,uBACpCA,EADoC;AAAA,YAChCc,KADgC,uBAChCA,KADgC;AAAA,YACzBJ,uBADyB,uBACzBA,uBADyB;AAE1C;;AACA,YAAI+C,OAAOrG,EAAEsG,kBAAF,CACT,IADS;AAET;AACAhD,kCAA0B,CAACA,uBAAD,CAA1B,GAAsD,EAH7C,EAITtD,EAAEuG,cAAF,CAAiB7C,MAAM8C,GAAN,CAAU;AAAA,iBAAQxG,EAAE4D,mBAAF,CAAsB5D,EAAEyG,oBAAF,CAAuB,GAAvB,EAA4Bb,KAAKhD,EAAjC,EAAqCgD,KAAKtB,OAA1C,CAAtB,CAAR;AAAA,SAAV,CAAjB,CAJS,CAAX;AAMA;AACA8B,gBAAQhE,IAAR,CAAapC,EAAEwE,mBAAF,CAAsB,KAAtB,EAA6B,CAACxE,EAAEyE,kBAAF,CAAqB7B,EAArB,EAAyByD,IAAzB,CAAD,CAA7B,CAAb;AACA;AACAD,gBAAQhE,IAAR,mCAAgBsB,MAAM8C,GAAN,CAAU;AAAA,iBAAQxG,EAAEwE,mBAAF,CAAsB,KAAtB,EAA6B,CAACxE,EAAEyE,kBAAF,CAAqBmB,KAAKhD,EAA1B,CAAD,CAA7B,CAAR;AAAA,SAAV,CAAhB;AACA;AACA,aAAKpC,mBAAL,GAA2BC,SAA3B;AACD;AACD,aAAO2F,OAAP;AACD","file":"ResidualReactElementSerializer.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"../realm.js\";\nimport { ResidualHeapSerializer } from \"./ResidualHeapSerializer.js\";\nimport { canHoistReactElement } from \"../react/hoisting.js\";\nimport { Get, IsAccessorDescriptor } from \"../methods/index.js\";\nimport * as t from \"babel-types\";\nimport type { BabelNode, BabelNodeExpression } from \"babel-types\";\nimport { ArrayValue, NumberValue, Value, ObjectValue } from \"../values/index.js\";\nimport { convertExpressionToJSXIdentifier, convertKeyValueToJSXAttribute } from \"../react/jsx.js\";\nimport { Logger } from \"../utils/logger.js\";\nimport invariant from \"../invariant.js\";\nimport { FatalError } from \"../errors\";\nimport type { ReactOutputTypes } from \"../options.js\";\nimport type { LazilyHoistedNodes } from \"./types.js\";\n\nexport class ResidualReactElementSerializer {\n  constructor(realm: Realm, residualHeapSerializer: ResidualHeapSerializer) {\n    this.realm = realm;\n    this.residualHeapSerializer = residualHeapSerializer;\n    this.logger = residualHeapSerializer.logger;\n    this.reactOutput = realm.react.output || \"create-element\";\n    this._lazilyHoistedNodes = undefined;\n  }\n\n  realm: Realm;\n  logger: Logger;\n  reactOutput: ReactOutputTypes;\n  residualHeapSerializer: ResidualHeapSerializer;\n  _lazilyHoistedNodes: void | LazilyHoistedNodes;\n\n  serializeReactElement(val: ObjectValue): BabelNodeExpression {\n    let typeValue = Get(this.realm, val, \"type\");\n    let keyValue = Get(this.realm, val, \"key\");\n    let refValue = Get(this.realm, val, \"ref\");\n    let propsValue = Get(this.realm, val, \"props\");\n\n    invariant(typeValue !== null, \"ReactElement type of null\");\n\n    let attributes = [];\n    let children = [];\n\n    if (keyValue !== null) {\n      let keyExpr = this.residualHeapSerializer.serializeValue(keyValue);\n      if (keyExpr.type !== \"NullLiteral\") {\n        if (this.reactOutput === \"jsx\") {\n          this._addSerializedValueToJSXAttriutes(\"key\", keyExpr, attributes);\n        } else if (this.reactOutput === \"create-element\") {\n          this._addSerializedValueToObjectProperty(\"key\", keyExpr, attributes);\n        }\n      }\n    }\n\n    if (refValue !== null) {\n      let refExpr = this.residualHeapSerializer.serializeValue(refValue);\n      if (refExpr.type !== \"NullLiteral\") {\n        if (this.reactOutput === \"jsx\") {\n          this._addSerializedValueToJSXAttriutes(\"ref\", refExpr, attributes);\n        } else if (this.reactOutput === \"create-element\") {\n          this._addSerializedValueToObjectProperty(\"ref\", refExpr, attributes);\n        }\n      }\n    }\n\n    if (propsValue instanceof ObjectValue) {\n      // the propsValue is visited to get the properties, but we don't emit it as the object\n      this.residualHeapSerializer.serializedValues.add(propsValue);\n      // have to case propsValue to ObjectValue or Flow complains that propsValues can be null/undefined\n      for (let [key, propertyBinding] of (propsValue: ObjectValue).properties) {\n        let desc = propertyBinding.descriptor;\n        if (desc === undefined) continue; // deleted\n        invariant(!IsAccessorDescriptor(this.realm, desc), \"expected descriptor to be a non-accessor property\");\n\n        invariant(key !== \"key\" && key !== \"ref\", `\"${key}\" is a reserved prop name`);\n\n        if (key === \"children\" && desc.value !== undefined) {\n          let childrenValue = desc.value;\n          if (childrenValue instanceof ArrayValue) {\n            this.residualHeapSerializer.serializedValues.add(childrenValue);\n            let childrenLength = Get(this.realm, childrenValue, \"length\");\n            let childrenLengthValue = 0;\n            if (childrenLength instanceof NumberValue) {\n              childrenLengthValue = childrenLength.value;\n              for (let i = 0; i < childrenLengthValue; i++) {\n                let child = Get(this.realm, childrenValue, \"\" + i);\n                if (child instanceof Value) {\n                  children.push(this._serializeReactElementChild(child));\n                } else {\n                  this.logger.logError(\n                    val,\n                    `ReactElement \"props.children[${i}]\" failed to serialize due to a non-value`\n                  );\n                }\n              }\n              continue;\n            }\n          }\n          // otherwise it must be a value, as desc.value !== undefined.\n          children.push(this._serializeReactElementChild(((childrenValue: any): Value)));\n          continue;\n        }\n        if (desc.value instanceof Value) {\n          if (this.reactOutput === \"jsx\") {\n            this._addSerializedValueToJSXAttriutes(\n              key,\n              this.residualHeapSerializer.serializeValue(desc.value),\n              attributes\n            );\n          } else if (this.reactOutput === \"create-element\") {\n            this._addSerializedValueToObjectProperty(\n              key,\n              this.residualHeapSerializer.serializeValue(desc.value),\n              attributes\n            );\n          }\n        }\n      }\n    }\n    let reactLibraryObject = this.realm.fbLibraries.react;\n    let shouldHoist =\n      this.residualHeapSerializer.currentFunctionBody !== this.residualHeapSerializer.mainBody &&\n      canHoistReactElement(this.realm, val);\n\n    let id = this.residualHeapSerializer.getSerializeObjectIdentifier(val);\n    // this identifier is used as the deafult, but also passed to the hoisted factory function\n    let originalCreateElementIdentifier = null;\n    // this name is used when hoisting, and is passed into the factory function, rather than the original\n    let hoistedCreateElementIdentifier = null;\n    let reactElement;\n\n    if (this.reactOutput === \"jsx\") {\n      reactElement = this._serializeReactElementToJSXElement(val, typeValue, attributes, children, reactLibraryObject);\n    } else if (this.reactOutput === \"create-element\") {\n      // if there is no React library, then we should throw and error, as it is needed for createElement output\n      if (reactLibraryObject === undefined) {\n        throw new FatalError(\"unable to serialize JSX to createElement due to React not being referenced in scope\");\n      }\n      let createElement = Get(this.realm, reactLibraryObject, \"createElement\");\n      originalCreateElementIdentifier = this.residualHeapSerializer.serializeValue(createElement);\n      if (shouldHoist) {\n        // if we haven't created a _lazilyHoistedNodes before, then this is the first time\n        // so we only create the hoisted identifier once\n        if (this._lazilyHoistedNodes === undefined) {\n          // create a new unique instance\n          hoistedCreateElementIdentifier = t.identifier(this.residualHeapSerializer.intrinsicNameGenerator.generate());\n        } else {\n          hoistedCreateElementIdentifier = this._lazilyHoistedNodes.createElementIdentifier;\n        }\n      }\n\n      reactElement = this._serializeReactElementToCreateElement(\n        val,\n        typeValue,\n        attributes,\n        children,\n        shouldHoist ? hoistedCreateElementIdentifier : originalCreateElementIdentifier\n      );\n    } else {\n      invariant(false, \"Unknown reactOutput specified\");\n    }\n    // if we are hoisting this React element, put the assignment in the body\n    // also ensure we are in an additional function\n    if (shouldHoist) {\n      // if the currentHoistedReactElements is not defined, we create it an emit the function call\n      // this should only occur once per additional function\n      if (this._lazilyHoistedNodes === undefined) {\n        let funcId = t.identifier(this.residualHeapSerializer.functionNameGenerator.generate());\n        this._lazilyHoistedNodes = {\n          id: funcId,\n          createElementIdentifier: hoistedCreateElementIdentifier,\n          nodes: [],\n        };\n        let statement = t.expressionStatement(\n          t.logicalExpression(\n            \"&&\",\n            t.binaryExpression(\"===\", id, t.unaryExpression(\"void\", t.numericLiteral(0), true)),\n            // pass the createElementIdentifier if it's not null\n            t.callExpression(funcId, originalCreateElementIdentifier ? [originalCreateElementIdentifier] : [])\n          )\n        );\n        this.residualHeapSerializer.emitter.emit(statement);\n      }\n      // we then push the reactElement and its id into our list of elements to process after\n      // the current additional function has serialzied\n      invariant(this._lazilyHoistedNodes !== undefined);\n      invariant(Array.isArray(this._lazilyHoistedNodes.nodes));\n      this._lazilyHoistedNodes.nodes.push({ id, astNode: reactElement });\n    } else {\n      let declar = t.variableDeclaration(\"var\", [t.variableDeclarator(id, reactElement)]);\n      this.residualHeapSerializer.emitter.emit(declar);\n    }\n    return reactElement;\n  }\n\n  _addSerializedValueToJSXAttriutes(prop: string, expr: any, attributes: Array<BabelNode>): void {\n    attributes.push(convertKeyValueToJSXAttribute(prop, expr));\n  }\n\n  _addSerializedValueToObjectProperty(prop: string, expr: any, attributes: Array<BabelNode>): void {\n    let key;\n\n    if (prop.includes(\"-\")) {\n      key = t.stringLiteral(prop);\n    } else {\n      key = t.identifier(prop);\n    }\n    attributes.push(t.objectProperty(key, expr));\n  }\n\n  _serializeReactElementToCreateElement(\n    val: ObjectValue,\n    typeValue: Value,\n    attributes: Array<BabelNode>,\n    children: Array<BabelNode>,\n    createElementIdentifier: BabelNodeIdentifier\n  ): BabelNodeExpression {\n    let typeIdentifier = this.residualHeapSerializer.serializeValue(typeValue);\n    let createElementArguments = [typeIdentifier];\n    // check if we need to add attributes\n    if (attributes.length !== 0) {\n      // cast to any for createElementArguments as casting it to BabelNodeObjectProperty[] isn't working\n      createElementArguments.push(t.objectExpression((attributes: any)));\n    }\n    if (children.length !== 0) {\n      if (attributes.length === 0) {\n        createElementArguments.push(t.nullLiteral());\n      }\n      createElementArguments.push(...children);\n    }\n    // cast to any for createElementArguments as casting it to BabelNodeExpresion[] isn't working\n    let createElementCall = t.callExpression(createElementIdentifier, (createElementArguments: any));\n    this._addBailOutMessageToBabelNode(val, createElementCall);\n    return createElementCall;\n  }\n\n  _serializeReactElementToJSXElement(\n    val: ObjectValue,\n    typeValue: Value,\n    attributes: Array<BabelNode>,\n    children: Array<BabelNode>,\n    reactLibraryObject: void | ObjectValue\n  ): BabelNodeExpression {\n    if (reactLibraryObject !== undefined) {\n      this.residualHeapSerializer.serializeValue(reactLibraryObject);\n    }\n    let identifier = convertExpressionToJSXIdentifier(this.residualHeapSerializer.serializeValue(typeValue), true);\n    let openingElement = t.jSXOpeningElement(identifier, (attributes: any), children.length === 0);\n    let closingElement = t.jSXClosingElement(identifier);\n\n    let jsxElement = t.jSXElement(openingElement, closingElement, children, children.length === 0);\n    this._addBailOutMessageToBabelNode(val, jsxElement);\n    return jsxElement;\n  }\n\n  _addBailOutMessageToBabelNode(val: ObjectValue, node: BabelNode): void {\n    // if there has been a bail-out, we create an inline BlockComment node before the JSX element\n    if (val.$BailOutReason !== undefined) {\n      // $BailOutReason contains an optional string of what to print out in the comment\n      node.leadingComments = [({ type: \"BlockComment\", value: `${val.$BailOutReason}` }: any)];\n    }\n  }\n\n  _serializeReactElementChild(child: Value): BabelNode {\n    const expr = this.residualHeapSerializer.serializeValue(child);\n\n    if (this.reactOutput === \"jsx\") {\n      if (t.isStringLiteral(expr) || t.isNumericLiteral(expr)) {\n        return t.jSXText(((expr: any).value: string) + \"\");\n      } else if (t.isJSXElement(expr)) {\n        return expr;\n      }\n      return t.jSXExpressionContainer(expr);\n    } else if (this.reactOutput === \"create-element\") {\n      return expr;\n    }\n    invariant(false, \"Unknown reactOutput specified\");\n  }\n\n  serializeLazyHoistedNodes() {\n    const entries = [];\n    if (this._lazilyHoistedNodes !== undefined) {\n      let { id, nodes, createElementIdentifier } = this._lazilyHoistedNodes;\n      // create a function that initializes all the hoisted nodes\n      let func = t.functionExpression(\n        null,\n        // use createElementIdentifier if it's not null\n        createElementIdentifier ? [createElementIdentifier] : [],\n        t.blockStatement(nodes.map(node => t.expressionStatement(t.assignmentExpression(\"=\", node.id, node.astNode))))\n      );\n      // push it to the mainBody of the module\n      entries.push(t.variableDeclaration(\"var\", [t.variableDeclarator(id, func)]));\n      // output all the empty variable declarations that will hold the nodes lazily\n      entries.push(...nodes.map(node => t.variableDeclaration(\"var\", [t.variableDeclarator(node.id)])));\n      // reset the _lazilyHoistedNodes so other additional functions work\n      this._lazilyHoistedNodes = undefined;\n    }\n    return entries;\n  }\n}\n"]}