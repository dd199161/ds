{"version":3,"sources":["../../../../src/debugger/adapter/channel/AdapterChannel.js"],"names":["AdapterChannel","inFilePath","outFilePath","_ioWrapper","_marshaller","_queue","_pendingRequestCallbacks","Map","_eventEmitter","err","console","error","process","exit","message","dbgResponse","unmarshallResponse","result","kind","emit","BREAKPOINT_ADD_ACKNOWLEDGE","id","STOPPED_RESPONSE","STEPINTO_RESPONSE","_prepackWaiting","_processRequestCallback","trySendNextRequest","isEmpty","request","dequeue","listenOnFile","_processPrepackMessage","bind","writeOut","requestID","callback","has","set","response","get","undefined","delete","event","listener","addListener","args","sendDebuggerStart","prepackCommand","sourceFile","concat","prepackArguments","debugOutFilePath","debugInFilePath","runtime","prepackRuntime","length","_prepackProcess","spawn","on","kill","clean","stdout","outputCallback","exitCallback","_addRequestCallback","enqueue","marshallContinueRequest","breakpoints","marshallSetBreakpointsRequest","marshallStackFramesRequest","frameId","marshallScopesRequest","variablesReference","marshallVariablesRequest","marshallStepIntoRequest","marshallStepOverRequest","expression","marshallEvaluateRequest","contents","writeOutSync","marshallDebuggerStart","messageProcessor","readIn","_handleFileReadError","clearInFile","clearOutFile"],"mappings":";;;;;;;qjBAAA;;;;;;;;;AAUA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;AAGA;IACaA,c,WAAAA,c;AACX,0BAAYC,UAAZ,EAAgCC,WAAhC,EAAqD;AAAA;;AACnD,SAAKC,UAAL,GAAkB,iCAAkB,IAAlB,EAAwBF,UAAxB,EAAoCC,WAApC,CAAlB;AACA,SAAKE,WAAL,GAAmB,0CAAnB;AACA,SAAKC,MAAL,GAAc,yBAAd;AACA,SAAKC,wBAAL,GAAgC,IAAIC,GAAJ,EAAhC;AACA,SAAKC,aAAL,GAAqB,sBAArB;AACD;;;;;;AASD;yCACqBC,G,EAAkB;AACrCC,cAAQC,KAAR,CAAcF,GAAd;AACAG,cAAQC,IAAR,CAAa,CAAb;AACD;;;2CAEsBC,O,EAAiB;AACtC,UAAIC,cAAc,KAAKX,WAAL,CAAiBY,kBAAjB,CAAoCF,OAApC,CAAlB;AACA,UAAIC,YAAYE,MAAZ,CAAmBC,IAAnB,KAA4B,gBAAhC,EAAkD;AAChD,aAAKV,aAAL,CAAmBW,IAAnB,CAAwB,2BAAaC,0BAArC,EAAiEL,YAAYM,EAA7E,EAAiFN,WAAjF;AACD,OAFD,MAEO,IAAIA,YAAYE,MAAZ,CAAmBC,IAAnB,KAA4B,SAAhC,EAA2C;AAChD,aAAKV,aAAL,CAAmBW,IAAnB,CAAwB,2BAAaG,gBAArC,EAAuDP,WAAvD;AACD,OAFM,MAEA,IAAIA,YAAYE,MAAZ,CAAmBC,IAAnB,KAA4B,UAAhC,EAA4C;AACjD,aAAKV,aAAL,CAAmBW,IAAnB,CAAwB,2BAAaI,iBAArC,EAAwDR,WAAxD;AACD;AACD,WAAKS,eAAL,GAAuB,IAAvB;AACA,WAAKC,uBAAL,CAA6BV,WAA7B;AACA,WAAKW,kBAAL;AACD;;AAED;;;;yCAC8B;AAC5B;AACA,UAAI,CAAC,KAAKF,eAAV,EAA2B,OAAO,KAAP;AAC3B;AACA,UAAI,KAAKnB,MAAL,CAAYsB,OAAZ,EAAJ,EAA2B,OAAO,KAAP;AAC3B,UAAIC,UAAU,KAAKvB,MAAL,CAAYwB,OAAZ,EAAd;AACA,WAAKC,YAAL,CAAkB,KAAKC,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAAlB;AACA,WAAKC,QAAL,CAAcL,OAAd;AACA,WAAKJ,eAAL,GAAuB,KAAvB;AACA,aAAO,IAAP;AACD;;;wCAEmBU,S,EAAmBC,Q,EAAoC;AACzE,+BAAU,CAAC,KAAK7B,wBAAL,CAA8B8B,GAA9B,CAAkCF,SAAlC,CAAX,EAAyD,+CAAzD;AACA,WAAK5B,wBAAL,CAA8B+B,GAA9B,CAAkCH,SAAlC,EAA6CC,QAA7C;AACD;;;4CAEuBG,Q,EAA4B;AAClD,UAAIH,WAAW,KAAK7B,wBAAL,CAA8BiC,GAA9B,CAAkCD,SAASjB,EAA3C,CAAf;AACA,+BAAUc,aAAaK,SAAvB,EAAkC,oDAAoDF,SAASjB,EAA/F;AACAc,eAASG,QAAT;AACA,WAAKhC,wBAAL,CAA8BmC,MAA9B,CAAqCH,SAASjB,EAA9C;AACD;;;yCAEoBqB,K,EAAeC,Q,EAAgD;AAClF,WAAKnC,aAAL,CAAmBoC,WAAnB,CAA+BF,KAA/B,EAAsCC,QAAtC;AACD;;;2BAEMT,S,EAAmBW,I,EAA8BV,Q,EAAoC;AAAA;;AAC1F,WAAKW,iBAAL,CAAuBZ,SAAvB;AACA,WAAKJ,YAAL,CAAkB,KAAKC,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAAlB;AACA,UAAIe,iBAAiB,CAACF,KAAKG,UAAN,EAAkBC,MAAlB,CAAyBJ,KAAKK,gBAA9B,CAArB;AACA;AACAH,uBAAiBA,eAAeE,MAAf,CAAsB,CACrC,mBADqC,EAErCJ,KAAKM,gBAFgC,EAGrC,oBAHqC,EAIrCN,KAAKO,eAJgC,CAAtB,CAAjB;;AAOA,UAAIC,UAAU,SAAd;AACA,UAAIR,KAAKS,cAAL,CAAoBC,MAApB,GAA6B,CAAjC,EAAoC;AAClC;AACAF,kBAAU,MAAV;AACAN,yBAAiB,CAACF,KAAKS,cAAN,EAAsBL,MAAtB,CAA6BF,cAA7B,CAAjB;AACD;AACD,WAAKS,eAAL,GAAuB,wBAAcC,KAAd,CAAoBJ,OAApB,EAA6BN,cAA7B,CAAvB;;AAEAnC,cAAQ8C,EAAR,CAAW,MAAX,EAAmB,YAAM;AACvB,cAAKF,eAAL,CAAqBG,IAArB;AACA,cAAKC,KAAL;AACAhD,gBAAQC,IAAR;AACD,OAJD;;AAMAD,cAAQ8C,EAAR,CAAW,QAAX,EAAqB,YAAM;AACzB,cAAKF,eAAL,CAAqBG,IAArB;AACA/C,gBAAQC,IAAR;AACD,OAHD;;AAKA,WAAK2C,eAAL,CAAqBK,MAArB,CAA4BH,EAA5B,CAA+B,MAA/B,EAAuCb,KAAKiB,cAA5C;;AAEA,WAAKN,eAAL,CAAqBE,EAArB,CAAwB,MAAxB,EAAgCb,KAAKkB,YAArC;AACA,WAAKC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;wBAEGD,S,EAAmBC,Q,EAAoC;AACzD,WAAK9B,MAAL,CAAY4D,OAAZ,CAAoB,KAAK7D,WAAL,CAAiB8D,uBAAjB,CAAyChC,SAAzC,CAApB;AACA,WAAKR,kBAAL;AACA,WAAKsC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;mCAEcD,S,EAAmBiC,W,EAAgChC,Q,EAAoC;AACpG,WAAK9B,MAAL,CAAY4D,OAAZ,CAAoB,KAAK7D,WAAL,CAAiBgE,6BAAjB,CAA+ClC,SAA/C,EAA0DiC,WAA1D,CAApB;AACA,WAAKzC,kBAAL;AACA,WAAKsC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;mCAEcD,S,EAAmBC,Q,EAAoC;AACpE,WAAK9B,MAAL,CAAY4D,OAAZ,CAAoB,KAAK7D,WAAL,CAAiBiE,0BAAjB,CAA4CnC,SAA5C,CAApB;AACA,WAAKR,kBAAL;AACA,WAAKsC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;8BAESD,S,EAAmBoC,O,EAAiBnC,Q,EAAoC;AAChF,WAAK9B,MAAL,CAAY4D,OAAZ,CAAoB,KAAK7D,WAAL,CAAiBmE,qBAAjB,CAAuCrC,SAAvC,EAAkDoC,OAAlD,CAApB;AACA,WAAK5C,kBAAL;AACA,WAAKsC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;iCAEYD,S,EAAmBsC,kB,EAA4BrC,Q,EAAoC;AAC9F,WAAK9B,MAAL,CAAY4D,OAAZ,CAAoB,KAAK7D,WAAL,CAAiBqE,wBAAjB,CAA0CvC,SAA1C,EAAqDsC,kBAArD,CAApB;AACA,WAAK9C,kBAAL;AACA,WAAKsC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;6BAEQD,S,EAAmBC,Q,EAAoC;AAC9D,WAAK9B,MAAL,CAAY4D,OAAZ,CAAoB,KAAK7D,WAAL,CAAiBsE,uBAAjB,CAAyCxC,SAAzC,CAApB;AACA,WAAKR,kBAAL;AACA,WAAKsC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;6BAEQD,S,EAAmBC,Q,EAAoC;AAC9D,WAAK9B,MAAL,CAAY4D,OAAZ,CAAoB,KAAK7D,WAAL,CAAiBuE,uBAAjB,CAAyCzC,SAAzC,CAApB;AACA,WAAKR,kBAAL;AACA,WAAKsC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;6BAEQD,S,EAAmBoC,O,EAAwBM,U,EAAoBzC,Q,EAAoC;AAC1G,WAAK9B,MAAL,CAAY4D,OAAZ,CAAoB,KAAK7D,WAAL,CAAiByE,uBAAjB,CAAyC3C,SAAzC,EAAoDoC,OAApD,EAA6DM,UAA7D,CAApB;AACA,WAAKlD,kBAAL;AACA,WAAKsC,mBAAL,CAAyB9B,SAAzB,EAAoCC,QAApC;AACD;;;6BAEQ2C,Q,EAAkB;AACzB,WAAK3E,UAAL,CAAgB4E,YAAhB,CAA6BD,QAA7B;AACD;;;sCAEiB5C,S,EAAmB;AACnC,WAAKD,QAAL,CAAc,KAAK7B,WAAL,CAAiB4E,qBAAjB,CAAuC9C,SAAvC,CAAd;AACD;;;iCAEY+C,gB,EAA6C;AACxD,WAAK9E,UAAL,CAAgB+E,MAAhB,CAAuB,KAAKC,oBAAL,CAA0BnD,IAA1B,CAA+B,IAA/B,CAAvB,EAA6DiD,gBAA7D;AACD;;;4BAEO;AACN,WAAK9E,UAAL,CAAgBiF,WAAhB;AACA,WAAKjF,UAAL,CAAgBkF,YAAhB;AACD","file":"AdapterChannel.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\nimport { FileIOWrapper } from \"./../../common/channel/FileIOWrapper.js\";\nimport { MessageMarshaller } from \"./../../common/channel/MessageMarshaller.js\";\nimport Queue from \"queue-fifo\";\nimport EventEmitter from \"events\";\nimport invariant from \"./../../common/invariant.js\";\nimport { DebugMessage } from \"./../../common/channel/DebugMessage.js\";\nimport child_process from \"child_process\";\nimport type { Breakpoint, DebuggerResponse, PrepackLaunchArguments } from \"./../../common/types.js\";\n\n//Channel used by the debug adapter to communicate with Prepack\nexport class AdapterChannel {\n  constructor(inFilePath: string, outFilePath: string) {\n    this._ioWrapper = new FileIOWrapper(true, inFilePath, outFilePath);\n    this._marshaller = new MessageMarshaller();\n    this._queue = new Queue();\n    this._pendingRequestCallbacks = new Map();\n    this._eventEmitter = new EventEmitter();\n  }\n  _ioWrapper: FileIOWrapper;\n  _marshaller: MessageMarshaller;\n  _queue: Queue;\n  _pendingRequestCallbacks: Map<number, (DebuggerResponse) => void>;\n  _prepackWaiting: boolean;\n  _eventEmitter: EventEmitter;\n  _prepackProcess: child_process.ChildProcess;\n\n  // Error handler for errors in files from the adapter channel\n  _handleFileReadError(err: ?ErrnoError) {\n    console.error(err);\n    process.exit(1);\n  }\n\n  _processPrepackMessage(message: string) {\n    let dbgResponse = this._marshaller.unmarshallResponse(message);\n    if (dbgResponse.result.kind === \"breakpoint-add\") {\n      this._eventEmitter.emit(DebugMessage.BREAKPOINT_ADD_ACKNOWLEDGE, dbgResponse.id, dbgResponse);\n    } else if (dbgResponse.result.kind === \"stopped\") {\n      this._eventEmitter.emit(DebugMessage.STOPPED_RESPONSE, dbgResponse);\n    } else if (dbgResponse.result.kind === \"stepInto\") {\n      this._eventEmitter.emit(DebugMessage.STEPINTO_RESPONSE, dbgResponse);\n    }\n    this._prepackWaiting = true;\n    this._processRequestCallback(dbgResponse);\n    this.trySendNextRequest();\n  }\n\n  // Check to see if the next request to Prepack can be sent and send it if so\n  trySendNextRequest(): boolean {\n    // check to see if Prepack is ready to accept another request\n    if (!this._prepackWaiting) return false;\n    // check that there is a message to send\n    if (this._queue.isEmpty()) return false;\n    let request = this._queue.dequeue();\n    this.listenOnFile(this._processPrepackMessage.bind(this));\n    this.writeOut(request);\n    this._prepackWaiting = false;\n    return true;\n  }\n\n  _addRequestCallback(requestID: number, callback: DebuggerResponse => void) {\n    invariant(!this._pendingRequestCallbacks.has(requestID), \"Request ID already exists in pending requests\");\n    this._pendingRequestCallbacks.set(requestID, callback);\n  }\n\n  _processRequestCallback(response: DebuggerResponse) {\n    let callback = this._pendingRequestCallbacks.get(response.id);\n    invariant(callback !== undefined, \"Request ID does not exist in pending requests: \" + response.id);\n    callback(response);\n    this._pendingRequestCallbacks.delete(response.id);\n  }\n\n  registerChannelEvent(event: string, listener: (response: DebuggerResponse) => void) {\n    this._eventEmitter.addListener(event, listener);\n  }\n\n  launch(requestID: number, args: PrepackLaunchArguments, callback: DebuggerResponse => void) {\n    this.sendDebuggerStart(requestID);\n    this.listenOnFile(this._processPrepackMessage.bind(this));\n    let prepackCommand = [args.sourceFile].concat(args.prepackArguments);\n    // Note: here the input file for the adapter is the output file for Prepack, and vice versa.\n    prepackCommand = prepackCommand.concat([\n      \"--debugInFilePath\",\n      args.debugOutFilePath,\n      \"--debugOutFilePath\",\n      args.debugInFilePath,\n    ]);\n\n    let runtime = \"prepack\";\n    if (args.prepackRuntime.length > 0) {\n      // user specified a Prepack path\n      runtime = \"node\";\n      prepackCommand = [args.prepackRuntime].concat(prepackCommand);\n    }\n    this._prepackProcess = child_process.spawn(runtime, prepackCommand);\n\n    process.on(\"exit\", () => {\n      this._prepackProcess.kill();\n      this.clean();\n      process.exit();\n    });\n\n    process.on(\"SIGINT\", () => {\n      this._prepackProcess.kill();\n      process.exit();\n    });\n\n    this._prepackProcess.stdout.on(\"data\", args.outputCallback);\n\n    this._prepackProcess.on(\"exit\", args.exitCallback);\n    this._addRequestCallback(requestID, callback);\n  }\n\n  run(requestID: number, callback: DebuggerResponse => void) {\n    this._queue.enqueue(this._marshaller.marshallContinueRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  setBreakpoints(requestID: number, breakpoints: Array<Breakpoint>, callback: DebuggerResponse => void) {\n    this._queue.enqueue(this._marshaller.marshallSetBreakpointsRequest(requestID, breakpoints));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getStackFrames(requestID: number, callback: DebuggerResponse => void) {\n    this._queue.enqueue(this._marshaller.marshallStackFramesRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getScopes(requestID: number, frameId: number, callback: DebuggerResponse => void) {\n    this._queue.enqueue(this._marshaller.marshallScopesRequest(requestID, frameId));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getVariables(requestID: number, variablesReference: number, callback: DebuggerResponse => void) {\n    this._queue.enqueue(this._marshaller.marshallVariablesRequest(requestID, variablesReference));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  stepInto(requestID: number, callback: DebuggerResponse => void) {\n    this._queue.enqueue(this._marshaller.marshallStepIntoRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  stepOver(requestID: number, callback: DebuggerResponse => void) {\n    this._queue.enqueue(this._marshaller.marshallStepOverRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  evaluate(requestID: number, frameId: void | number, expression: string, callback: DebuggerResponse => void) {\n    this._queue.enqueue(this._marshaller.marshallEvaluateRequest(requestID, frameId, expression));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  writeOut(contents: string) {\n    this._ioWrapper.writeOutSync(contents);\n  }\n\n  sendDebuggerStart(requestID: number) {\n    this.writeOut(this._marshaller.marshallDebuggerStart(requestID));\n  }\n\n  listenOnFile(messageProcessor: (message: string) => void) {\n    this._ioWrapper.readIn(this._handleFileReadError.bind(this), messageProcessor);\n  }\n\n  clean() {\n    this._ioWrapper.clearInFile();\n    this._ioWrapper.clearOutFile();\n  }\n}\n"]}