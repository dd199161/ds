{"version":3,"sources":["../../src/react/errors.js"],"names":["ExpectedBailOut","message","self","Error","Object","setPrototypeOf","prototype","SimpleClassBailOut"],"mappings":";;;;;;;;AAAA;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;IACaA,e,WAAAA,e,GAEX,yBAAYC,OAAZ,EAA6B;AAAA;;AAC3B,OAAKA,OAAL,GAAeA,OAAf;AACA,MAAIC,OAAO,IAAIC,KAAJ,CAAUF,OAAV,CAAX;AACAG,SAAOC,cAAP,CAAsBH,IAAtB,EAA4BF,gBAAgBM,SAA5C;AACA,SAAOJ,IAAP;AACD,C;;AAEHE,OAAOC,cAAP,CAAsBL,eAAtB,EAAuCG,KAAvC;AACAC,OAAOC,cAAP,CAAsBL,gBAAgBM,SAAtC,EAAiDH,MAAMG,SAAvD;;AAEA;AACA;AACA;;IACaC,kB,WAAAA,kB,GAEX,4BAAYN,OAAZ,EAA6B;AAAA;;AAC3B,MAAIC,OAAO,IAAIC,KAAJ,CAAUF,OAAV,CAAX;AACAG,SAAOC,cAAP,CAAsBH,IAAtB,EAA4BK,mBAAmBD,SAA/C;AACA,SAAOJ,IAAP;AACD,C;;AAEHE,OAAOC,cAAP,CAAsBE,kBAAtB,EAA0CJ,KAA1C;AACAC,OAAOC,cAAP,CAAsBE,mBAAmBD,SAAzC,EAAoDH,MAAMG,SAA1D","file":"errors.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\n// ExpectedBailOut is like an error, that gets thrown during the reconcilation phase\n// allowing the reconcilation to continue on other branches of the tree, the message\n// given to ExpectedBailOut will be assigned to the value.$BailOutReason property and serialized\n// as a comment in the output source to give the user hints as to what they need to do\n// to fix the bail-out case\nexport class ExpectedBailOut {\n  message: string;\n  constructor(message: string) {\n    this.message = message;\n    let self = new Error(message);\n    Object.setPrototypeOf(self, ExpectedBailOut.prototype);\n    return self;\n  }\n}\nObject.setPrototypeOf(ExpectedBailOut, Error);\nObject.setPrototypeOf(ExpectedBailOut.prototype, Error.prototype);\n\n// SimpleClassBailOuts only occur when a simple class instance is created and used\n// bailing out here will result in a complex class instance being created after\n// and an alternative complex class component route being used\nexport class SimpleClassBailOut {\n  message: string;\n  constructor(message: string) {\n    let self = new Error(message);\n    Object.setPrototypeOf(self, SimpleClassBailOut.prototype);\n    return self;\n  }\n}\nObject.setPrototypeOf(SimpleClassBailOut, Error);\nObject.setPrototypeOf(SimpleClassBailOut.prototype, Error.prototype);\n"]}