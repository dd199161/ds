"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createMockReactRelay = createMockReactRelay;

var _index = require("../../values/index.js");

var _singletons = require("../../singletons.js");

var _utils = require("../prepack/utils.js");

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

function createMockReactRelay(realm, relayRequireName) {
  var reactRelay = new _index.ObjectValue(realm, realm.intrinsics.ObjectPrototype, "require(\"" + relayRequireName + "\")", true);
  // for QueryRenderer, we want to leave the component alone but process it's "render" prop
  var queryRendererComponent = (0, _utils.createAbstract)(realm, "function", "require(\"" + relayRequireName + "\").QueryRenderer");
  _singletons.Create.CreateDataPropertyOrThrow(realm, reactRelay, "QueryRenderer", queryRendererComponent);

  var graphql = (0, _utils.createAbstract)(realm, "function", "require(\"" + relayRequireName + "\").graphql");
  _singletons.Create.CreateDataPropertyOrThrow(realm, reactRelay, "graphql", graphql);

  var createFragmentContainer = (0, _utils.createAbstract)(realm, "function", "require(\"" + relayRequireName + "\").createFragmentContainer");
  _singletons.Create.CreateDataPropertyOrThrow(realm, reactRelay, "createFragmentContainer", createFragmentContainer);
  return reactRelay;
}
//# sourceMappingURL=relay-mocks.js.map