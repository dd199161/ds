{"version":3,"sources":["../../../src/intrinsics/fb-www/global.js"],"names":["realm","global","$GlobalObject","moduleValue","createAbstractObject","$DefineOwnProperty","value","writable","enumerable","configurable","babelHelpersValue","$GlobalEnv","evaluate","babelHelpersAST","context","requireNameVal","requireNameValValue","fbLibraries","react","undefined","reactRelay","requireName","type","getTypeFromName","requireValue","createFromTemplate","intrinsicName","babelHelpersCode"],"mappings":";;;;;;ypBAAA;;;;;;;;;kBAkDe,UAASA,KAAT,EAA6B;AAC1C,MAAIC,SAASD,MAAME,aAAnB;;AAEA;AACA,MAAIC,cAAc,qBAAcC,oBAAd,CAAmCJ,KAAnC,EAA0C,QAA1C,CAAlB;AACAC,SAAOI,kBAAP,CAA0B,QAA1B,EAAoC;AAClCC,WAAOH,WAD2B;AAElCI,cAAU,IAFwB;AAGlCC,gBAAY,KAHsB;AAIlCC,kBAAc;AAJoB,GAApC;;AAOA,MAAMC,oBAAoBV,MAAMW,UAAN,CAAiBC,QAAjB,CAA0BC,eAA1B,EAA2C,KAA3C,CAA1B;AACA,2BAAUH,+CAAV;AACAT,SAAOI,kBAAP,CAA0B,cAA1B,EAA0C;AACxCC,WAAOI,iBADiC;AAExCH,cAAU,IAF8B;AAGxCC,gBAAY,IAH4B;AAIxCC,kBAAc;AAJ0B,GAA1C;;AAOA;AACAR,SAAOI,kBAAP,CAA0B,SAA1B,EAAqC;AACnCC,WAAO,+BAAwBN,KAAxB,EAA+B,gBAA/B,EAAiD,SAAjD,EAA4D,CAA5D,EAA+D,UAACc,OAAD,QAA+B;AAAA;AAAA,UAApBC,cAAoB;;AACnG,+BAAUA,4CAAV;AACA,UAAIC,sBAAsBD,eAAeT,KAAzC;;AAEA,UAAIU,wBAAwB,OAAxB,IAAmCA,wBAAwB,OAA/D,EAAwE;AACtE,YAAIhB,MAAMiB,WAAN,CAAkBC,KAAlB,KAA4BC,SAAhC,EAA2C;AACzC,cAAID,QAAQ,iCAAgBlB,KAAhB,EAAuBgB,mBAAvB,CAAZ;AACAhB,gBAAMiB,WAAN,CAAkBC,KAAlB,GAA0BA,KAA1B;AACA,iBAAOA,KAAP;AACD;AACD,eAAOlB,MAAMiB,WAAN,CAAkBC,KAAzB;AACD,OAPD,MAOO,IAAIF,wBAAwB,aAAxB,IAAyCA,wBAAwB,aAArE,EAAoF;AACzF,YAAIhB,MAAMiB,WAAN,CAAkBG,UAAlB,KAAiCD,SAArC,EAAgD;AAC9C,cAAIC,aAAa,sCAAqBpB,KAArB,EAA4BgB,mBAA5B,CAAjB;AACAhB,gBAAMiB,WAAN,CAAkBG,UAAlB,GAA+BA,UAA/B;AACA,iBAAOA,UAAP;AACD;AACD,eAAOpB,MAAMiB,WAAN,CAAkBG,UAAzB;AACD;AACD,UAAIC,6BAA0BN,eAAeT,KAAzC,QAAJ;AACA,UAAIgB,OAAO,aAAMC,eAAN,CAAsB,UAAtB,CAAX;AACA,UAAIC,eAAe,qBAAcC,kBAAd,CACjBzB,KADiB,EAEjB,uBAAwBqB,WAAxB,CAFiB,EAGfC,IAHe,EAIjB,EAJiB,EAKjBD,WALiB,CAAnB;AAOAG,mBAAaE,aAAb,GAA6BL,WAA7B;AACA,aAAOG,YAAP;AACD,KA9BM,CAD4B;AAgCnCjB,cAAU,IAhCyB;AAiCnCC,gBAAY,KAjCuB;AAkCnCC,kBAAc;AAlCqB,GAArC;AAoCD,C;;AAjGD;;AAEA;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEA;AACA,IAAMkB,4tBAAN;AA4BA,IAAId,kBAAkB,8BAAgBc,gBAAhB,CAAtB","file":"global.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { parseExpression } from \"babylon\";\nimport type { Realm } from \"../../realm.js\";\nimport { AbstractValue, NativeFunctionValue, Value, ObjectValue, StringValue } from \"../../values/index.js\";\nimport buildExpressionTemplate from \"../../utils/builder.js\";\nimport { createMockReact } from \"./react-mocks.js\";\nimport { createMockReactRelay } from \"./relay-mocks.js\";\nimport invariant from \"../../invariant\";\n\n// Based on www babelHelpers fork.\nconst babelHelpersCode = `\n{\n  inherits(subClass, superClass) {\n    Object.assign(subClass, superClass);\n    subClass.prototype = Object.create(superClass && superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__superConstructor__ = superClass;\n    return superClass;\n  },\n  _extends: Object.assign,\n  extends: Object.assign,\n  objectWithoutProperties(obj, keys) {\n    var target = {};\n    for (var i in obj) {\n      if (!hasOwn.call(obj, i) || keys.indexOf(i) >= 0) {\n        continue;\n      }\n      target[i] = obj[i];\n    }\n    return target;\n  },\n  taggedTemplateLiteralLoose(strings, raw) {\n    strings.raw = raw;\n    return strings;\n  },\n  bind: Function.prototype.bind,\n}\n`;\nlet babelHelpersAST = parseExpression(babelHelpersCode);\n\nexport default function(realm: Realm): void {\n  let global = realm.$GlobalObject;\n\n  // module.exports support\n  let moduleValue = AbstractValue.createAbstractObject(realm, \"module\");\n  global.$DefineOwnProperty(\"module\", {\n    value: moduleValue,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  const babelHelpersValue = realm.$GlobalEnv.evaluate(babelHelpersAST, false);\n  invariant(babelHelpersValue instanceof ObjectValue);\n  global.$DefineOwnProperty(\"babelHelpers\", {\n    value: babelHelpersValue,\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  // apply React mock (for now just React.Component)\n  global.$DefineOwnProperty(\"require\", {\n    value: new NativeFunctionValue(realm, \"global.require\", \"require\", 0, (context, [requireNameVal]) => {\n      invariant(requireNameVal instanceof StringValue);\n      let requireNameValValue = requireNameVal.value;\n\n      if (requireNameValValue === \"react\" || requireNameValValue === \"React\") {\n        if (realm.fbLibraries.react === undefined) {\n          let react = createMockReact(realm, requireNameValValue);\n          realm.fbLibraries.react = react;\n          return react;\n        }\n        return realm.fbLibraries.react;\n      } else if (requireNameValValue === \"react-relay\" || requireNameValValue === \"RelayModern\") {\n        if (realm.fbLibraries.reactRelay === undefined) {\n          let reactRelay = createMockReactRelay(realm, requireNameValValue);\n          realm.fbLibraries.reactRelay = reactRelay;\n          return reactRelay;\n        }\n        return realm.fbLibraries.reactRelay;\n      }\n      let requireName = `require(\"${requireNameVal.value}\")`;\n      let type = Value.getTypeFromName(\"function\");\n      let requireValue = AbstractValue.createFromTemplate(\n        realm,\n        buildExpressionTemplate(requireName),\n        ((type: any): typeof Value),\n        [],\n        requireName\n      );\n      requireValue.intrinsicName = requireName;\n      return requireValue;\n    }),\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n}\n"]}