{"version":3,"sources":["../src/prepack-options.js"],"names":["getRealmOptions","getSerializerOptions","getDebuggerOptions","abstractEffectsInAdditionalFunctions","compatibility","debugNames","errorHandler","mathRandomSeed","omitInvariants","uniqueSuffix","reactEnabled","reactOutput","residual","serialize","check","strictlyMonotonicDateNow","timeout","maxStackDepth","additionalFunctions","lazyObjectsRuntime","heapGraphFormat","delayInitializations","delayUnsupportedRequires","accelerateUnsupportedRequires","internalDebug","debugScopes","logStatistics","logModules","profile","inlineExpressions","simpleClosures","initializeMoreModules","trace","result","undefined","debugInFilePath","debugOutFilePath","inFilePath","outFilePath"],"mappings":"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","file":"prepack-options.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { ErrorHandler } from \"./errors.js\";\nimport type { SerializerOptions, RealmOptions, Compatibility, DebuggerOptions, ReactOutputTypes } from \"./options\";\nimport { Realm } from \"./realm.js\";\nimport invariant from \"./invariant.js\";\n\nexport type PrepackOptions = {|\n  additionalGlobals?: Realm => void,\n  additionalFunctions?: Array<string>,\n  abstractEffectsInAdditionalFunctions?: boolean,\n  lazyObjectsRuntime?: string,\n  heapGraphFormat?: \"DotLanguage\" | \"VISJS\",\n  compatibility?: Compatibility,\n  debugNames?: boolean,\n  delayInitializations?: boolean,\n  delayUnsupportedRequires?: boolean,\n  accelerateUnsupportedRequires?: boolean,\n  inputSourceMapFilename?: string,\n  internalDebug?: boolean,\n  debugScopes?: boolean,\n  logStatistics?: boolean,\n  logModules?: boolean,\n  mathRandomSeed?: string,\n  errorHandler?: ErrorHandler,\n  omitInvariants?: boolean,\n  outputFilename?: string,\n  profile?: boolean,\n  reactEnabled?: boolean,\n  reactOutput?: ReactOutputTypes,\n  residual?: boolean,\n  serialize?: boolean,\n  check?: boolean,\n  inlineExpressions?: boolean,\n  simpleClosures?: boolean,\n  sourceMaps?: boolean,\n  initializeMoreModules?: boolean,\n  statsFile?: string,\n  strictlyMonotonicDateNow?: boolean,\n  timeout?: number,\n  trace?: boolean,\n  uniqueSuffix?: string,\n  maxStackDepth?: number,\n  debugInFilePath?: string,\n  debugOutFilePath?: string,\n|};\n\nexport function getRealmOptions({\n  abstractEffectsInAdditionalFunctions = false,\n  compatibility = \"browser\",\n  debugNames = false,\n  errorHandler,\n  mathRandomSeed,\n  omitInvariants = false,\n  uniqueSuffix,\n  reactEnabled,\n  reactOutput,\n  residual,\n  serialize = !residual,\n  check,\n  strictlyMonotonicDateNow,\n  timeout,\n  maxStackDepth,\n}: PrepackOptions): RealmOptions {\n  return {\n    abstractEffectsInAdditionalFunctions,\n    compatibility,\n    debugNames,\n    errorHandler,\n    mathRandomSeed,\n    omitInvariants,\n    uniqueSuffix,\n    reactEnabled,\n    reactOutput,\n    residual,\n    serialize,\n    check,\n    strictlyMonotonicDateNow,\n    timeout,\n    maxStackDepth,\n  };\n}\n\nexport function getSerializerOptions({\n  additionalFunctions,\n  lazyObjectsRuntime,\n  heapGraphFormat,\n  delayInitializations = false,\n  delayUnsupportedRequires = false,\n  accelerateUnsupportedRequires = true,\n  internalDebug = false,\n  debugScopes = false,\n  logStatistics = false,\n  logModules = false,\n  profile = false,\n  inlineExpressions = false,\n  simpleClosures = false,\n  initializeMoreModules = false,\n  trace = false,\n}: PrepackOptions): SerializerOptions {\n  let result: SerializerOptions = {\n    delayInitializations,\n    delayUnsupportedRequires,\n    accelerateUnsupportedRequires,\n    initializeMoreModules,\n    internalDebug,\n    debugScopes,\n    logStatistics,\n    logModules,\n    profile,\n    inlineExpressions,\n    simpleClosures,\n    trace,\n  };\n  if (additionalFunctions) result.additionalFunctions = additionalFunctions;\n  if (lazyObjectsRuntime !== undefined) {\n    result.lazyObjectsRuntime = lazyObjectsRuntime;\n  }\n  if (heapGraphFormat !== undefined) {\n    result.heapGraphFormat = heapGraphFormat;\n  }\n  return result;\n}\n\nexport function getDebuggerOptions({ debugInFilePath, debugOutFilePath }: PrepackOptions): DebuggerOptions {\n  invariant(debugInFilePath !== undefined, \"Debugger invoked without input file path\");\n  invariant(debugOutFilePath !== undefined, \"Debugger invoked without output file path\");\n  let result: DebuggerOptions = {\n    inFilePath: debugInFilePath,\n    outFilePath: debugOutFilePath,\n  };\n  return result;\n}\n"]}